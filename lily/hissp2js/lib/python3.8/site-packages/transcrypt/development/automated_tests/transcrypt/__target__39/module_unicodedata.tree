file: Module 
	body: list 
		element: ImportFrom 
			module: str = unicodedata
			names: list 
				element: alias 
					name: str = normalize
					asname: NoneType = None
			level: int = 0
		element: FunctionDef 
			name: str = run
			args: arguments 
				posonlyargs: list 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
						type_comment: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Constant 
								value: str = NFC:
								kind: NoneType = None
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFC
										kind: NoneType = None
									element: BinOp 
										left: Constant 
											value: str = c
											kind: NoneType = None
										op: Add 
										right: Constant 
											value: str = ̧
											kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFC
										kind: NoneType = None
									element: Constant 
										value: str = ç
										kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Compare 
									left: Call 
										func: Name 
											id: str = normalize
											ctx: Load 
										args: list 
											element: Constant 
												value: str = NFC
												kind: NoneType = None
											element: BinOp 
												left: Constant 
													value: str = c
													kind: NoneType = None
												op: Add 
												right: Constant 
													value: str = ̧
													kind: NoneType = None
										keywords: list 
									ops: list 
										element: Eq 
									comparators: list 
										element: Call 
											func: Name 
												id: str = normalize
												ctx: Load 
											args: list 
												element: Constant 
													value: str = NFC
													kind: NoneType = None
												element: Constant 
													value: str = ç
													kind: NoneType = None
											keywords: list 
								ops: list 
									element: Eq 
								comparators: list 
									element: Constant 
										value: bool = True
										kind: NoneType = None
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFC
										kind: NoneType = None
									element: Constant 
										value: str = q̣̇
										kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFC
										kind: NoneType = None
									element: Constant 
										value: str = q̣̇
										kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Compare 
									left: Call 
										func: Name 
											id: str = normalize
											ctx: Load 
										args: list 
											element: Constant 
												value: str = NFC
												kind: NoneType = None
											element: Constant 
												value: str = q̣̇
												kind: NoneType = None
										keywords: list 
									ops: list 
										element: Eq 
									comparators: list 
										element: Call 
											func: Name 
												id: str = normalize
												ctx: Load 
											args: list 
												element: Constant 
													value: str = NFC
													kind: NoneType = None
												element: Constant 
													value: str = q̣̇
													kind: NoneType = None
											keywords: list 
								ops: list 
									element: Eq 
								comparators: list 
									element: Constant 
										value: bool = True
										kind: NoneType = None
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFC
										kind: NoneType = None
									element: Constant 
										value: str = 가
										kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFC
										kind: NoneType = None
									element: BinOp 
										left: Constant 
											value: str = ᄀ
											kind: NoneType = None
										op: Add 
										right: Constant 
											value: str = ᅡ
											kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Compare 
									left: Call 
										func: Name 
											id: str = normalize
											ctx: Load 
										args: list 
											element: Constant 
												value: str = NFC
												kind: NoneType = None
											element: Constant 
												value: str = 가
												kind: NoneType = None
										keywords: list 
									ops: list 
										element: Eq 
									comparators: list 
										element: Call 
											func: Name 
												id: str = normalize
												ctx: Load 
											args: list 
												element: Constant 
													value: str = NFC
													kind: NoneType = None
												element: BinOp 
													left: Constant 
														value: str = ᄀ
														kind: NoneType = None
													op: Add 
													right: Constant 
														value: str = ᅡ
														kind: NoneType = None
											keywords: list 
								ops: list 
									element: Eq 
								comparators: list 
									element: Constant 
										value: bool = True
										kind: NoneType = None
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFC
										kind: NoneType = None
									element: Constant 
										value: str = Ω
										kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Constant 
								value: str = NFD:
								kind: NoneType = None
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFD
										kind: NoneType = None
									element: BinOp 
										left: Constant 
											value: str = c
											kind: NoneType = None
										op: Add 
										right: Constant 
											value: str = ̧
											kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFD
										kind: NoneType = None
									element: Constant 
										value: str = ç
										kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Compare 
									left: Call 
										func: Name 
											id: str = normalize
											ctx: Load 
										args: list 
											element: Constant 
												value: str = NFD
												kind: NoneType = None
											element: BinOp 
												left: Constant 
													value: str = c
													kind: NoneType = None
												op: Add 
												right: Constant 
													value: str = ̧
													kind: NoneType = None
										keywords: list 
									ops: list 
										element: Eq 
									comparators: list 
										element: Call 
											func: Name 
												id: str = normalize
												ctx: Load 
											args: list 
												element: Constant 
													value: str = NFD
													kind: NoneType = None
												element: Constant 
													value: str = ç
													kind: NoneType = None
											keywords: list 
								ops: list 
									element: Eq 
								comparators: list 
									element: Constant 
										value: bool = True
										kind: NoneType = None
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFD
										kind: NoneType = None
									element: Constant 
										value: str = q̣̇
										kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFD
										kind: NoneType = None
									element: Constant 
										value: str = q̣̇
										kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Compare 
									left: Call 
										func: Name 
											id: str = normalize
											ctx: Load 
										args: list 
											element: Constant 
												value: str = NFD
												kind: NoneType = None
											element: Constant 
												value: str = q̣̇
												kind: NoneType = None
										keywords: list 
									ops: list 
										element: Eq 
									comparators: list 
										element: Call 
											func: Name 
												id: str = normalize
												ctx: Load 
											args: list 
												element: Constant 
													value: str = NFD
													kind: NoneType = None
												element: Constant 
													value: str = q̣̇
													kind: NoneType = None
											keywords: list 
								ops: list 
									element: Eq 
								comparators: list 
									element: Constant 
										value: bool = True
										kind: NoneType = None
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFD
										kind: NoneType = None
									element: Constant 
										value: str = 가
										kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFD
										kind: NoneType = None
									element: BinOp 
										left: Constant 
											value: str = ᄀ
											kind: NoneType = None
										op: Add 
										right: Constant 
											value: str = ᅡ
											kind: NoneType = None
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Compare 
									left: Call 
										func: Name 
											id: str = normalize
											ctx: Load 
										args: list 
											element: Constant 
												value: str = NFD
												kind: NoneType = None
											element: Constant 
												value: str = 가
												kind: NoneType = None
										keywords: list 
									ops: list 
										element: Eq 
									comparators: list 
										element: Call 
											func: Name 
												id: str = normalize
												ctx: Load 
											args: list 
												element: Constant 
													value: str = NFD
													kind: NoneType = None
												element: BinOp 
													left: Constant 
														value: str = ᄀ
														kind: NoneType = None
													op: Add 
													right: Constant 
														value: str = ᅡ
														kind: NoneType = None
											keywords: list 
								ops: list 
									element: Eq 
								comparators: list 
									element: Constant 
										value: bool = True
										kind: NoneType = None
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = normalize
									ctx: Load 
								args: list 
									element: Constant 
										value: str = NFD
										kind: NoneType = None
									element: Constant 
										value: str = Ω
										kind: NoneType = None
								keywords: list 
						keywords: list 
			decorator_list: list 
			returns: NoneType = None
			type_comment: NoneType = None
	type_ignores: list 
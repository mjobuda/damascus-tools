file: Module 
	body: list 
		element: FunctionDef 
			name: str = run
			args: arguments 
				posonlyargs: list 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
						type_comment: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aList
							ctx: Store 
					value: List 
						elts: list 
							element: Constant 
								value: int = 1
								kind: NoneType = None
							element: Constant 
								value: int = 2
								kind: NoneType = None
							element: Constant 
								value: int = 3
								kind: NoneType = None
							element: Constant 
								value: str = moon
								kind: NoneType = None
							element: Constant 
								value: str = stars
								kind: NoneType = None
						ctx: Load 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = aList
								ctx: Load 
							attr: str = insert
							ctx: Load 
						args: list 
							element: Constant 
								value: int = 3
								kind: NoneType = None
							element: Constant 
								value: str = sun
								kind: NoneType = None
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = aList
									ctx: Load 
								slice: Slice 
									lower: Constant 
										value: int = 2
										kind: NoneType = None
									upper: Constant 
										value: int = 4
										kind: NoneType = None
									step: Constant 
										value: int = 1
										kind: NoneType = None
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = aList
									ctx: Load 
								slice: Slice 
									lower: NoneType = None
									upper: NoneType = None
									step: NoneType = None
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = aList
									ctx: Load 
								slice: Slice 
									lower: Constant 
										value: int = 2
										kind: NoneType = None
									upper: NoneType = None
									step: NoneType = None
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = len
									ctx: Load 
								args: list 
									element: Name 
										id: str = aList
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = aList
								ctx: Load 
							attr: str = append
							ctx: Load 
						args: list 
							element: Constant 
								value: str = milkyway
								kind: NoneType = None
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = aList
								ctx: Load 
							attr: str = extend
							ctx: Load 
						args: list 
							element: List 
								elts: list 
									element: Constant 
										value: str = m1
										kind: NoneType = None
									element: Constant 
										value: str = m31
										kind: NoneType = None
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = anotherList
							ctx: Store 
					value: Call 
						func: Name 
							id: str = list
							ctx: Load 
						args: list 
							element: Tuple 
								elts: list 
									element: Constant 
										value: str = a
										kind: NoneType = None
									element: Constant 
										value: str = b
										kind: NoneType = None
									element: Constant 
										value: str = c
										kind: NoneType = None
								ctx: Load 
						keywords: list 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = anotherList
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Constant 
									value: str = b
									kind: NoneType = None
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = anotherList
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Constant 
									value: str = d
									kind: NoneType = None
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = anotherList
										ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aDict
							ctx: Store 
					value: Dict 
						keys: list 
							element: Constant 
								value: int = 1
								kind: NoneType = None
							element: Constant 
								value: str = animal
								kind: NoneType = None
						values: list 
							element: Constant 
								value: str = plant
								kind: NoneType = None
							element: Constant 
								value: int = 2
								kind: NoneType = None
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aDict
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = aDict
									ctx: Load 
								slice: Index 
									value: Constant 
										value: int = 1
										kind: NoneType = None
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = aDict
									ctx: Load 
								slice: Index 
									value: Constant 
										value: str = animal
										kind: NoneType = None
								ctx: Load 
						keywords: list 
				element: FunctionDef 
					name: str = p
					args: arguments 
						posonlyargs: list 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Constant 
								value: int = 3
								kind: NoneType = None
					decorator_list: list 
					returns: NoneType = None
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = q
							ctx: Store 
					value: Constant 
						value: int = 4
						kind: NoneType = None
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Dict 
								keys: list 
									element: Call 
										func: Name 
											id: str = p
											ctx: Load 
										args: list 
										keywords: list 
									element: Name 
										id: str = q
										ctx: Load 
								values: list 
									element: Constant 
										value: str = three
										kind: NoneType = None
									element: Constant 
										value: str = four
										kind: NoneType = None
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aTuple
							ctx: Store 
					value: Tuple 
						elts: list 
							element: Constant 
								value: int = 1
								kind: NoneType = None
							element: Constant 
								value: int = 2
								kind: NoneType = None
							element: Constant 
								value: int = 3
								kind: NoneType = None
							element: Constant 
								value: int = 4
								kind: NoneType = None
							element: Constant 
								value: int = 5
								kind: NoneType = None
						ctx: Load 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aTuple
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = len
									ctx: Load 
								args: list 
									element: Name 
										id: str = aTuple
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = anotherTuple
							ctx: Store 
					value: Tuple 
						elts: list 
							element: Constant 
								value: int = 1
								kind: NoneType = None
						ctx: Load 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = anotherTuple
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aSet
							ctx: Store 
					value: Set 
						elts: list 
							element: Constant 
								value: int = 1
								kind: NoneType = None
							element: Constant 
								value: int = 2
								kind: NoneType = None
							element: Constant 
								value: int = 2
								kind: NoneType = None
							element: Constant 
								value: int = 3
								kind: NoneType = None
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aSet
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = len
									ctx: Load 
								args: list 
									element: Name 
										id: str = aSet
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Constant 
									value: int = 2
									kind: NoneType = None
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aSet
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Constant 
									value: int = 4
									kind: NoneType = None
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aSet
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = aSet
								ctx: Load 
							attr: str = clear
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aSet
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = anotherSet
							ctx: Store 
					value: Call 
						func: Name 
							id: str = set
							ctx: Load 
						args: list 
							element: Tuple 
								elts: list 
									element: Constant 
										value: int = 4
										kind: NoneType = None
									element: Constant 
										value: int = 5
										kind: NoneType = None
									element: Constant 
										value: int = 5
										kind: NoneType = None
									element: Constant 
										value: int = 6
										kind: NoneType = None
								ctx: Load 
						keywords: list 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = anotherSet
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = emptySet
							ctx: Store 
					value: Call 
						func: Name 
							id: str = set
							ctx: Load 
						args: list 
						keywords: list 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = emptySet
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = len
									ctx: Load 
								args: list 
									element: Name 
										id: str = emptySet
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aString
							ctx: Store 
					value: Constant 
						value: str = c_cis_d_dis_e_f_fis_g_gis_a_ais_b_c
						kind: NoneType = None
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Constant 
									value: str = cis
									kind: NoneType = None
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aString
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Constant 
									value: str = g
									kind: NoneType = None
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aString
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Constant 
									value: str = bes
									kind: NoneType = None
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aString
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Constant 
									value: str = z
									kind: NoneType = None
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aString
										ctx: Load 
						keywords: list 
			decorator_list: list 
			returns: NoneType = None
			type_comment: NoneType = None
	type_ignores: list 
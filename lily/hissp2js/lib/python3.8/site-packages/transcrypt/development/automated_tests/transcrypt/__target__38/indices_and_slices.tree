file: Module 
	body: list 
		element: FunctionDef 
			name: str = run
			args: arguments 
				posonlyargs: list 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
						type_comment: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = all
							ctx: Store 
					value: Call 
						func: Name 
							id: str = range
							ctx: Load 
						args: list 
							element: Constant 
								value: int = 32
								kind: NoneType = None
						keywords: list 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = all
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = all
									ctx: Load 
								slice: Slice 
									lower: Constant 
										value: int = 8
										kind: NoneType = None
									upper: Constant 
										value: int = 24
										kind: NoneType = None
									step: NoneType = None
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = all
									ctx: Load 
								slice: Slice 
									lower: Constant 
										value: int = 8
										kind: NoneType = None
									upper: Constant 
										value: int = 24
										kind: NoneType = None
									step: Constant 
										value: int = 2
										kind: NoneType = None
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aList
							ctx: Store 
					value: List 
						elts: list 
							element: Constant 
								value: int = 3
								kind: NoneType = None
							element: Constant 
								value: int = 4
								kind: NoneType = None
							element: Constant 
								value: int = 7
								kind: NoneType = None
							element: Constant 
								value: int = 8
								kind: NoneType = None
						ctx: Load 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Subscript 
							value: Name 
								id: str = aList
								ctx: Load 
							slice: Slice 
								lower: Constant 
									value: int = 4
									kind: NoneType = None
								upper: Constant 
									value: int = 4
									kind: NoneType = None
								step: NoneType = None
							ctx: Store 
					value: List 
						elts: list 
							element: Constant 
								value: int = 9
								kind: NoneType = None
							element: Constant 
								value: int = 10
								kind: NoneType = None
						ctx: Load 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Subscript 
							value: Name 
								id: str = aList
								ctx: Load 
							slice: Slice 
								lower: Constant 
									value: int = 2
									kind: NoneType = None
								upper: Constant 
									value: int = 2
									kind: NoneType = None
								step: NoneType = None
							ctx: Store 
					value: List 
						elts: list 
							element: Constant 
								value: int = 5
								kind: NoneType = None
							element: Constant 
								value: int = 6
								kind: NoneType = None
						ctx: Load 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Subscript 
							value: Name 
								id: str = aList
								ctx: Load 
							slice: Slice 
								lower: Constant 
									value: int = 0
									kind: NoneType = None
								upper: Constant 
									value: int = 0
									kind: NoneType = None
								step: NoneType = None
							ctx: Store 
					value: List 
						elts: list 
							element: Constant 
								value: int = 1
								kind: NoneType = None
							element: Constant 
								value: int = 2
								kind: NoneType = None
						ctx: Load 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Subscript 
							value: Name 
								id: str = aList
								ctx: Load 
							slice: Slice 
								lower: NoneType = None
								upper: NoneType = None
								step: Constant 
									value: int = 2
									kind: NoneType = None
							ctx: Store 
					value: ListComp 
						elt: BinOp 
							left: Name 
								id: str = x
								ctx: Load 
							op: Add 
							right: Constant 
								value: float = 0.001
								kind: NoneType = None
						generators: list 
							element: comprehension 
								target: Name 
									id: str = x
									ctx: Store 
								iter: Call 
									func: Name 
										id: str = range
										ctx: Load 
									args: list 
										element: Constant 
											value: int = 10
											kind: NoneType = None
									keywords: list 
								ifs: list 
									element: BinOp 
										left: Name 
											id: str = x
											ctx: Load 
										op: Mod 
										right: Constant 
											value: int = 2
											kind: NoneType = None
								is_async: int = 0
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
			decorator_list: list 
			returns: NoneType = None
			type_comment: NoneType = None
	type_ignores: list 
file: Module 
	body: list 
		element: ImportFrom 
			module: str = org.transcrypt.stubs.browser
			names: list 
				element: alias 
					name: str = __pragma__
					asname: NoneType = None
			level: int = 0
		element: FunctionDef 
			name: str = run
			args: arguments 
				posonlyargs: list 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
						type_comment: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = x
							ctx: Store 
					value: Constant 
						value: int = 567
						kind: NoneType = None
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = y
							ctx: Store 
					value: UnaryOp 
						op: USub 
						operand: Constant 
							value: int = 3
							kind: NoneType = None
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = z
							ctx: Store 
					value: BinOp 
						left: BinOp 
							left: Constant 
								value: int = 5
								kind: NoneType = None
							op: Mult 
							right: Name 
								id: str = x
								ctx: Load 
						op: Add 
						right: BinOp 
							left: Constant 
								value: int = 2
								kind: NoneType = None
							op: Mult 
							right: Name 
								id: str = y
								ctx: Load 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Call 
									func: Attribute 
										value: Name 
											id: str = x
											ctx: Load 
										attr: str = conjugate
										ctx: Load 
									args: list 
									keywords: list 
								attr: str = real
								ctx: Load 
							element: Attribute 
								value: Call 
									func: Attribute 
										value: Name 
											id: str = x
											ctx: Load 
										attr: str = conjugate
										ctx: Load 
									args: list 
									keywords: list 
								attr: str = imag
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = x
								ctx: Load 
							element: Name 
								id: str = y
								ctx: Load 
							element: Name 
								id: str = z
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Constant 
								value: str = opov
								kind: NoneType = None
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = a
							ctx: Store 
					value: BinOp 
						left: Constant 
							value: int = 234
							kind: NoneType = None
						op: Add 
						right: Constant 
							value: complex = 3j
							kind: NoneType = None
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = b
							ctx: Store 
					value: BinOp 
						left: Constant 
							value: int = 4
							kind: NoneType = None
						op: Sub 
						right: Constant 
							value: complex = 5j
							kind: NoneType = None
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = c
							ctx: Store 
					value: Call 
						func: Name 
							id: str = complex
							ctx: Load 
						args: list 
							element: UnaryOp 
								op: USub 
								operand: Constant 
									value: int = 6
									kind: NoneType = None
							element: Constant 
								value: int = 7
								kind: NoneType = None
						keywords: list 
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = d
							ctx: Store 
					value: Constant 
						value: int = 1
						kind: NoneType = None
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = a
								ctx: Load 
							element: Name 
								id: str = b
								ctx: Load 
							element: Name 
								id: str = c
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Call 
									func: Attribute 
										value: Name 
											id: str = d
											ctx: Load 
										attr: str = conjugate
										ctx: Load 
									args: list 
									keywords: list 
								attr: str = real
								ctx: Load 
							element: Attribute 
								value: Call 
									func: Attribute 
										value: Name 
											id: str = d
											ctx: Load 
										attr: str = conjugate
										ctx: Load 
									args: list 
									keywords: list 
								attr: str = imag
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = t
							ctx: Store 
					value: BinOp 
						left: BinOp 
							left: BinOp 
								left: Constant 
									value: int = 6
									kind: NoneType = None
								op: Mult 
								right: Name 
									id: str = x
									ctx: Load 
							op: Sub 
							right: BinOp 
								left: Constant 
									value: int = 3
									kind: NoneType = None
								op: Mult 
								right: Name 
									id: str = y
									ctx: Load 
						op: Add 
						right: Constant 
							value: int = 7
							kind: NoneType = None
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = t
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = d
							ctx: Store 
					value: BinOp 
						left: Constant 
							value: int = 2
							kind: NoneType = None
						op: Mult 
						right: Name 
							id: str = a
							ctx: Load 
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = e
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = x
							ctx: Load 
						op: Mult 
						right: Name 
							id: str = b
							ctx: Load 
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = f
							ctx: Store 
					value: BinOp 
						left: BinOp 
							left: Name 
								id: str = z
								ctx: Load 
							op: Add 
							right: Name 
								id: str = d
								ctx: Load 
						op: Add 
						right: Name 
							id: str = e
							ctx: Load 
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = g
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = a
							ctx: Load 
						op: Div 
						right: Name 
							id: str = b
							ctx: Load 
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = h
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = a
							ctx: Load 
						op: Sub 
						right: Name 
							id: str = b
							ctx: Load 
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = i
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = x
							ctx: Load 
						op: Sub 
						right: Name 
							id: str = c
							ctx: Load 
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = j
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = a
							ctx: Load 
						op: Sub 
						right: Name 
							id: str = x
							ctx: Load 
					type_comment: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = k
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = b
							ctx: Load 
						op: Add 
						right: Name 
							id: str = y
							ctx: Load 
					type_comment: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = d
								ctx: Load 
							element: Name 
								id: str = e
								ctx: Load 
							element: Name 
								id: str = f
								ctx: Load 
							element: Call 
								func: Name 
									id: str = round
									ctx: Load 
								args: list 
									element: Attribute 
										value: Name 
											id: str = g
											ctx: Load 
										attr: str = real
										ctx: Load 
									element: Constant 
										value: int = 2
										kind: NoneType = None
								keywords: list 
							element: Call 
								func: Name 
									id: str = round
									ctx: Load 
								args: list 
									element: Attribute 
										value: Name 
											id: str = g
											ctx: Load 
										attr: str = imag
										ctx: Load 
									element: Constant 
										value: int = 2
										kind: NoneType = None
								keywords: list 
							element: Name 
								id: str = h
								ctx: Load 
							element: Name 
								id: str = i
								ctx: Load 
							element: Name 
								id: str = j
								ctx: Load 
							element: Name 
								id: str = k
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Constant 
								value: str = noopov
								kind: NoneType = None
						keywords: list 
			decorator_list: list 
			returns: NoneType = None
			type_comment: NoneType = None
	type_ignores: list 